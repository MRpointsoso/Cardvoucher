<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/task  
    http://www.springframework.org/schema/task/spring-task-4.1.xsd 	
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">

	<!-- 通过mvc:resources设置静态资源，这样servlet就会处理这些静态资源，而不通过控制器 -->
	<!-- 设置不过滤内容，比如:css,jquery,img 等资源文件 -->
	<mvc:resources location="/*.html" mapping="**/**.html" />
	<mvc:resources location="/css/*" mapping="**/css/**" />
	<mvc:resources location="/js/*" mapping="**/js/**" />
	<mvc:resources location="/images/*" mapping="**/images/**" />

	<!-- 默认扫描的包路径 -->
	<context:component-scan base-package="com.test.controller" />
	<!-- 处理器映射器和适配器，可以使用mvc注解驱动 -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter" />
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>

    <task:annotation-driven /> <!-- 定时器开关--> 
     
	<!-- 视图解析器 -->
	<!-- 像下面这样设置，如果请求为/，则不通过controller，而直接解析为/index.jsp -->
	<!-- mvc:view-controller path="/come" view-name="department"/ -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 将jstl的jar包加入工程，默认支持jstl -->
		<!-- 前缀和后缀可以去掉的，为了方便开发才加的 -->
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- 支持上传文件 -->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <property name="maxUploadSize" value="104857600"/>  
        <property name="maxInMemorySize" value="4096"/>  
    </bean> 
</beans>
